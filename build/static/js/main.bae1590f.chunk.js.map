{"version":3,"sources":["helpers/Utility.js","App.js","serviceWorker.js","index.js"],"names":["require","config","Utility","getMediaLinks","productLink","isMobile","window","outerWidth","productURL","encodeURIComponent","location","origin","sellerContactNumber","localStorage","getItem","whatsappShareLinkShop","shareLinkShop","whatsappShareLink","shareLink","this","STATUS_ERROR","STATUS_SUCCESS","args","process","url","slice","data","host","type","fetch","baseUrl","method","body","JSON","stringify","mode","headers","catch","error","console","log","alert","response","json","responseJSON","Layout","React","lazy","Home","Products","AboutUs","FAQ","ContactUs","Checkout","ProductDetails","NotFoundPage","App","state","layoutData","loading","requestBodyData","sendRequest","result","success","parse","document","title","menu","logoText","querySelector","setAttribute","footer","description","setItem","contactInfo","value","setState","props","history","push","info","fallback","className","color","exact","path","render","sliderImg","showBanner","bgClass","component","Component","withRouter","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.bae1590f.chunk.js","sourcesContent":["require(\"dotenv\").config();\n\nclass Utility {\n  constructor() {\n    this.STATUS_ERROR = false;\n    this.STATUS_SUCCESS = true;\n  }\n\n  async sendRequest(args) {\n    const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\n    var data, url, type;\n\n    url = args.url;\n    if (url.slice(0, 1) === \"/\") {\n      url = url.slice(1);\n    }\n\n    if (args.data) {\n      data = args.data;\n    } else {\n      data = {};\n    }\n\n    if (!args.data.url) {\n      data[\"url\"] = window.location.host;\n    }\n\n    type = args.type ? args.type : \"get\";\n\n    const response = await fetch(baseUrl + \"/\" + url, {\n      method: type,\n      body: JSON.stringify(data),\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n    }).catch(function (error) {\n      console.log(error);\n      alert(\"Something went wrong while fetching data. Please try again.\");\n    });\n\n    const responseJSON = await response.json();\n\n    return responseJSON;\n  }\n\n  getMediaLinks = (productLink) => {\n    let isMobile = window.outerWidth <= 1024;\n    let productURL = encodeURIComponent(window.location.origin + productLink);\n    let sellerContactNumber = localStorage.getItem(\"seller_contact_number\");\n\n    let whatsappShareLinkShop = isMobile\n      ? `whatsapp://send?phone=${sellerContactNumber}&text=Hey I like your shop`\n      : `https://wa.me/${sellerContactNumber}?text=Hey I like your shop`;\n\n    let shareLinkShop = isMobile\n      ? \"whatsapp://send?text=Hey! Check this shop\"\n      : `https://wa.me?text=Hey! Check this shop`;\n\n    let whatsappShareLink = isMobile\n      ? `whatsapp://send?phone=${sellerContactNumber}&text=` + productURL\n      : `https://wa.me/${sellerContactNumber}?text=` + productURL;\n\n    let shareLink = isMobile\n      ? \"whatsapp://send?text=\" + productURL\n      : `https://wa.me?text=` + productURL;\n\n    return {\n      whatsappShareLinkShop,\n      shareLinkShop,\n      whatsappShareLink,\n      shareLink,\n    };\n  };\n}\n\nexport default new Utility();\n","//load dependencies\nimport React, { Suspense } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\n//load helper files\nimport Utility from \"./helpers/Utility\";\n\n//Load Packages css\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./components/pages/assets/css/common.css\";\n\n//Load Components\nconst Layout = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"layout\" */ \"./components/common/container/Layout\"\n  )\n);\n\nconst Home = React.lazy(() =>\n  import(/* webpackChunkName: \"home\" */ \"./components/pages/home/Home\")\n);\n\nconst Products = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"product\" */ \"./components/pages/products/Products\"\n  )\n);\n\nconst AboutUs = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"about-us\" */ \"./components/pages/about_us/AboutUs\"\n  )\n);\n\nconst FAQ = React.lazy(() =>\n  import(/* webpackChunkName: \"faq\" */ \"./components/pages/faq/FAQ\")\n);\n\nconst ContactUs = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"contact-us\" */ \"./components/pages/contact_us/ContactUs\"\n  )\n);\n\nconst Checkout = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"checkout\" */ \"./components/pages/checkout/Checkout\"\n  )\n);\n\nconst ProductDetails = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"product-details\" */ \"./components/pages/products/product_details/ProductDetails\"\n  )\n);\n\nconst NotFoundPage = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"product-details\" */ \"./components/pages/error_pages/not_found/404\"\n  )\n);\n\nclass App extends React.Component {\n  state = {\n    layoutData: { loading: true },\n  };\n\n  async componentDidMount() {\n    let requestBodyData = {\n      type: \"post\",\n      url: \"sellerapi/layout/get\",\n      data: {\n        // url: 'myshop.shopwiry.com',\n      },\n    };\n\n    let result = await Utility.sendRequest(requestBodyData);\n    if (result.success === Utility.STATUS_SUCCESS) {\n      let data = result.data;\n      let layoutData = JSON.parse(data.layoutData);\n      layoutData[\"loading\"] = false;\n\n      document.title = layoutData.menu.logoText;\n      document\n        .querySelector('meta[name=\"description\"]')\n        .setAttribute(\"content\", layoutData.footer.description.description);\n\n      localStorage.setItem(\n        \"seller_contact_number\",\n        layoutData.footer.contactInfo[1].value\n      );\n\n      this.setState({\n        layoutData,\n      });\n    } else {\n      this.props.history.push(\"/404\");\n    }\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"From Error log:\");\n    console.log(error, info);\n\n    // alert('Something went wrong. Please try again.');\n  }\n\n  render() {\n    return (\n      <Suspense\n        fallback={\n          <Loader className=\"loaderBox\" type=\"TailSpin\" color=\"#00BFFF\" />\n        }\n      >\n        <Switch>\n          <Route\n            exact={true}\n            path=\"/\"\n            render={(props) => (\n              <Layout\n                sliderImg=\"slider1.png\"\n                data={this.state.layoutData}\n                showBanner={true}\n              >\n                <Home {...props} />\n              </Layout>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/all-products\"\n            render={(props) => (\n              <Layout data={this.state.layoutData} showBanner={true}>\n                <Products {...props} />\n              </Layout>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/about-us\"\n            render={(props) => (\n              <Layout data={this.state.layoutData} showBanner={false}>\n                <AboutUs {...props} />\n              </Layout>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/faq\"\n            render={(props) => (\n              <Layout data={this.state.layoutData} showBanner={false}>\n                <FAQ {...props} />\n              </Layout>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/contact-us\"\n            render={(props) => (\n              <Layout data={this.state.layoutData} showBanner={false}>\n                <ContactUs {...props} data={this.state.layoutData} />\n              </Layout>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/checkout\"\n            render={(props) => (\n              <Layout\n                bgClass=\"checkoutBg \"\n                data={this.state.layoutData}\n                showBanner={false}\n              >\n                <Checkout {...props} />\n              </Layout>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/product-details/:id\"\n            render={(props) => (\n              <Layout data={this.state.layoutData} showBanner={false}>\n                <ProductDetails {...props} />\n              </Layout>\n            )}\n          />\n          <Route exact={true} path=\"/404\" component={NotFoundPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}